[{"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\index.js":"1","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\App.js":"2","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\reportWebVitals.js":"3","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\map.jsx":"4","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusDriving.jsx":"5","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\icon.js":"6","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusStops.jsx":"7","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\index.js":"8","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\App.js":"9","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\reportWebVitals.js":"10","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\map.jsx":"11","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\BusStops.jsx":"12","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\BusDriving.jsx":"13","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\icon.js":"14","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\DataHandling.js":"15","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\BusDialogV2.jsx":"16"},{"size":500,"mtime":1609252547964,"results":"17","hashOfConfig":"18"},{"size":1748,"mtime":1610527806664,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":2123,"mtime":1610528269821,"results":"21","hashOfConfig":"18"},{"size":4607,"mtime":1610215852239,"results":"22","hashOfConfig":"18"},{"size":994,"mtime":1610133003646,"results":"23","hashOfConfig":"18"},{"size":973,"mtime":1609612388967,"results":"24","hashOfConfig":"18"},{"size":517,"mtime":1610532914717,"results":"25","hashOfConfig":"26"},{"size":3686,"mtime":1610724493220,"results":"27","hashOfConfig":"26"},{"size":375,"mtime":1609321404431,"results":"28","hashOfConfig":"26"},{"size":1687,"mtime":1610724493348,"results":"29","hashOfConfig":"26"},{"size":832,"mtime":1610724493311,"results":"30","hashOfConfig":"26"},{"size":2166,"mtime":1610724783334,"results":"31","hashOfConfig":"26"},{"size":1286,"mtime":1610724759115,"results":"32","hashOfConfig":"26"},{"size":2383,"mtime":1610724493320,"results":"33","hashOfConfig":"26"},{"size":2093,"mtime":1610724493282,"results":"34","hashOfConfig":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"b1x567",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"2h5mek",{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"55"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\index.js",[],["77","78"],"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\App.js",[],"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\reportWebVitals.js",[],"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\map.jsx",["79","80","81","82","83","84","85","86","87","88"],"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusDriving.jsx",["89","90","91"],"import React, { Component } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport { busIconRed, busIconGreen, busIconYellow } from \"../icon\";\r\nimport L from \"leaflet\";\r\nimport ExtraMarkers from \"leaflet-extra-markers\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass BusDriving extends Component {\r\n  render() {\r\n    if (!this.props.isLoadedBus) {\r\n      return \"hi\";\r\n    } else {\r\n      console.log(this.okay());\r\n      return this.okay();\r\n    }\r\n  }\r\n\r\n  okay() {\r\n    return this.props.itemsBus.map(function (item) {\r\n      if (item.properties.delay > 20) {\r\n        return (\r\n          <div>\r\n            <Marker\r\n              icon={busIconRed}\r\n              key={uuidv4()}\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n              opacity=\"1\"\r\n              size=\"30px\"\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n            <Marker\r\n              icon={\r\n                new L.ExtraMarkers.icon({\r\n                  shape: \"\",\r\n                  innerHTML: item.properties.linienid.toString(),\r\n                  color: \"red\",\r\n                  iconColor: \"red\",\r\n                  iconSize: [24, 24],\r\n                  iconAnchor: [2, 0],\r\n                })\r\n              }\r\n              key={uuidv4()}\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n          </div>\r\n        );\r\n      } else if (item.properties.delay >= 10) {\r\n        return (\r\n          <div>\r\n            <Marker\r\n              icon={busIconYellow}\r\n              key={uuidv4()}\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n              opacity=\"1\"\r\n              size=\"30px\"\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n            <Marker\r\n              icon={\r\n                new L.ExtraMarkers.icon({\r\n                  shape: \"\",\r\n                  innerHTML: item.properties.linienid.toString(),\r\n                  color: \"red\",\r\n                  iconColor: \"red\",\r\n                  iconSize: [24, 24],\r\n                  iconAnchor: [2, 0],\r\n                })\r\n              }\r\n              key={uuidv4()}\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n          </div>\r\n        );\r\n      } else {\r\n        return (\r\n          <div>\r\n            <Marker\r\n              icon={busIconGreen}\r\n              key={uuidv4()}\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n              opacity=\"1\"\r\n              size=\"30px\"\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n            <Marker\r\n              icon={\r\n                new L.ExtraMarkers.icon({\r\n                  shape: \"\",\r\n                  innerHTML: item.properties.linienid.toString(),\r\n                  color: \"red\",\r\n                  iconColor: \"red\",\r\n                  iconSize: [24, 24],\r\n                  iconAnchor: [2, 0],\r\n                })\r\n              }\r\n              key={uuidv4()}\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\nexport default BusDriving;\r\n","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\icon.js",["92"],"import L from \"leaflet\";\r\nimport busIconRot from \"./assets/bus_rot.svg\";\r\nimport busIconGelb from \"./assets/bus_gelb.svg\";\r\nimport busIconGrün from \"./assets/bus_grün.svg\";\r\nimport stopicon from \"./assets/Haltestelle.svg\";\r\n\r\nvar i = 1;\r\n\r\nconst busIconRed = new L.Icon({\r\n  iconUrl: busIconRot,\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12],\r\n  popupAnchor: [0, -6],\r\n  className: \"leaflet-div-icon\",\r\n});\r\n\r\nconst busIconYellow = new L.Icon({\r\n  iconUrl: busIconGelb,\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12],\r\n  popupAnchor: [0, -6],\r\n  className: \"leaflet-div-icon\",\r\n});\r\n\r\nconst busIconGreen = new L.Icon({\r\n  iconUrl: busIconGrün,\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12],\r\n  popupAnchor: [0, -6],\r\n  className: \"leaflet-div-icon\",\r\n});\r\n\r\nconst busStopIcon = new L.Icon({\r\n  iconUrl: stopicon,\r\n  iconRetinaUrl: stopicon,\r\n  iconSize: [24, 24],\r\n  iconAnchor: [12, 12],\r\n  popupAnchor: [0, -12],\r\n});\r\n\r\nexport { busStopIcon, busIconRed, busIconYellow, busIconGreen };\r\n","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusStops.jsx",["93","94","95","96"],"import React, { Component } from \"react\";\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { busIcon, busStopIcon } from \"../icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass BusStops extends Component {\r\n  render() {\r\n    if (!this.props.isLoadedStops) {\r\n      console.log(\"BusStios not Loaded\");\r\n      return \"ok\";\r\n    } else {\r\n      console.log(\"Bus Stops Loaded\");\r\n      return this.props.itemsStop.map((item) => {\r\n        return (\r\n          <Marker\r\n            icon={busStopIcon}\r\n            key={uuidv4()}\r\n            position={[\r\n              item.geometry.coordinates[1],\r\n              item.geometry.coordinates[0],\r\n            ]}\r\n          >\r\n            <Popup>\r\n              Haltestelle: {item.properties.lbez} <br /> Richtung:{\" \"}\r\n              {item.properties.richtung}\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default BusStops;\r\n","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\index.js",[],["97","98"],"C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\App.js",["99"],"import React, { Component } from \"react\";\r\nimport BusMap from \"./components/map\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DataHandling from './components/DataHandling';\r\n\r\n\r\nclass Apps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.interval = 0;\r\n    this.datahandling = new DataHandling;\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      currentCount: 0,\r\n      filteredBusses: [],\r\n      AllBusses: [],\r\n      filter: [],\r\n      AllLines: [],\r\n      itemsBus: [],\r\n      itmesStop: [],\r\n      isLoadedBus: false,\r\n      isLoadedStops: false,\r\n      zoom: 16,\r\n      currensposition: [],\r\n      positionLoaded: false,\r\n    };\r\n    this.filterBusses = this.filterBusses.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n\r\n  }\r\n\r\n  timer() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    })\r\n    if (this.state.currentCount >= 10) {\r\n      this.getData();\r\n      this.setState({\r\n        currentCount: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  filterBusses(id) {\r\n    const newStateArray = this.state.filter.slice();\r\n    const index = newStateArray.indexOf(id);\r\n\r\n    if (index > -1) {\r\n      newStateArray.splice(index, 1);\r\n    }\r\n    else {\r\n      newStateArray.push(id);\r\n    }\r\n\r\n    this.setState({\r\n      filter: newStateArray,\r\n    },\r\n      this.updateFilteredBusses);\r\n  }\r\n\r\n  updateFilteredBusses() {\r\n\r\n    this.setState({\r\n      filteredBusses: this.datahandling.getBusInformation(this.state.items, this.state.filter, this.state.busStops),\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHaltestellen();\r\n    setInterval(this.timer.bind(this), 1000);\r\n  }\r\n\r\n  getHaltestellen() {\r\n    fetch(\"https://rest.busradar.conterra.de/prod/haltestellen\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          busStops: this.datahandling.getBusStops(json.features),\r\n          itemsStop: json.features,\r\n        });\r\n      }).then(() => this.getData())\r\n      ;\r\n\r\n      if (\"geolocation\" in navigator) {\r\n        navigator.geolocation.getCurrentPosition((success) =>\r\n          this.setState({\r\n            currensposition: [success.coords.latitude, success.coords.longitude],\r\n            positionLoaded: true,\r\n          })\r\n        );\r\n\r\n      } else {\r\n        console.log(\"Not Available\");\r\n      }\r\n  }\r\n\r\n\r\n  getData() {\r\n    fetch(\"https://rest.busradar.conterra.de/prod/fahrzeuge\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          items: json.features,\r\n          AllLines: this.datahandling.getBusLines(json.features, this.state.filter),\r\n          AllBusses: this.datahandling.getBusInformation(json.features, [],  this.state.busStops),\r\n          filteredBusses: this.datahandling.getBusInformation(json.features, this.state.filter, this.state.busStops),\r\n          isLoaded: true,\r\n          itemsBus: json.features,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n    return (\r\n      <div>\r\n        <BusMap\r\n          itemsStop={this.state.itemsStop}\r\n          itemsBus={this.state.itemsBus}\r\n          zoom={this.state.zoom}\r\n          currentPosition={this.state.currensposition}\r\n          positionLoaded={this.state.positionLoaded}\r\n          busStops={this.state.busStops}\r\n          AllLines={this.state.AllLines}\r\n          filter={this.state.filter}\r\n          filterBusses={this.filterBusses}\r\n          AllBusses={this.state.AllBusses}\r\n          items={this.state.items}\r\n          filteredBusses={this.state.filteredBusses} />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  else {\r\n    return <p>Is Loading...</p>\r\n  }\r\n  }\r\n}\r\n\r\nexport default Apps;\r\n","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\reportWebVitals.js",[],"C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\map.jsx",["100","101","102","103","104","105","106","107","108"],"import React, { Component } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport BusDriving from \"./BusDriving\";\r\nimport BusDialogV2 from \"./BusDialogV2\";\r\n\r\nimport BusStops from \"./BusStops\";\r\n\r\nclass BusMap extends Component {\r\n  render() {\r\n    const center = () => {\r\n      if (this.props.positionLoaded) {\r\n          return this.props.currentPosition;\r\n      } else {\r\n        return [51.961563, 7.628202];\r\n      }\r\n    };\r\n      return (\r\n        <div>\r\n          <MapContainer\r\n            // center={center()}\r\n            center={[51.961563, 7.628202]}\r\n            // zoom={this.props.zoom}\r\n            zoom={16}\r\n            scrollWheelZoom={true}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <BusDriving\r\n              itemsBus={this.props.itemsBus}\r\n              filter={this.props.filter}\r\n            />\r\n            {/* <BusStops\r\n              itemsStop={this.props.itemsStop}\r\n              isLoadedStops={this.props.isLoadedStops}\r\n            /> */}\r\n          </MapContainer>\r\n          <BusDialogV2\r\n            busStops={this.props.busStops}\r\n            AllLines={this.props.AllLines}\r\n            filter={this.props.filter}\r\n            filterBusses={this.props.filterBusses}\r\n            AllBusses={this.props.AllBusses}\r\n            items={this.props.items}\r\n            isLoaded={this.props.isLoaded}\r\n            filteredBusses={this.props.filteredBusses}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default BusMap;\r\n","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\BusStops.jsx",["109","110","111"],"import React, { Component } from \"react\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\n\r\nimport { busStopIcon } from \"../icon\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass BusStops extends Component {\r\n  render() {\r\n    if (!this.props.isLoadedStops) {\r\n      return \"ok\";\r\n    } else {\r\n      return this.props.itemsStop.map((item) => {\r\n        return (\r\n          <Marker\r\n            icon={busStopIcon}\r\n            key={uuidv4()}\r\n            position={[\r\n              item.geometry.coordinates[1],\r\n              item.geometry.coordinates[0],\r\n            ]}\r\n          >\r\n            <Popup>\r\n              Haltestelle: {item.properties.lbez} <br /> Richtung:{\" \"}\r\n              {item.properties.richtung}\r\n            </Popup>\r\n          </Marker>\r\n        );\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nexport default BusStops;\r\n","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\BusDriving.jsx",["112","113"],"import React, { Component } from \"react\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\n// import { busIconRed, busIconGreen, busIconYellow } from \"../icon\";\r\nimport { busIcon } from \"../icon\";\r\nimport L from \"leaflet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ExtraMarkers from \"leaflet-extra-markers\";\r\n\r\nclass BusDriving extends Component {\r\n  render() {\r\n    return this.loadComponent();\r\n  }\r\n\r\n  loadComponent() {\r\n    return this.props.itemsBus.map(((item) => {\r\n      if (\r\n        this.props.filter.length > 0\r\n          ? this.props.filter.includes(item.properties.linienid)\r\n          : true\r\n      ) {\r\n        return (\r\n          <div key={uuidv4()}>\r\n            <Marker\r\n              icon={\r\n                // item.properties.delay > 20\r\n                //   ? busIconRed\r\n                //   : item.properties.delay >= 10\r\n                //   ? busIconYellow\r\n                //   : busIconGreen\r\n                busIcon\r\n              }\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n              opacity=\"1\"\r\n              size=\"30px\"\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n            <Marker\r\n              icon={\r\n                new L.ExtraMarkers.icon({\r\n                  shape: \"\",\r\n                  innerHTML: item.properties.linienid.toString(),\r\n                  color: \"red\",\r\n                  iconColor: \"red\",\r\n                  iconSize: [24, 24],\r\n                  iconAnchor: [2, 0],\r\n                })\r\n              }\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n          </div>\r\n        );\r\n      }\r\n    }));\r\n  }\r\n}\r\nexport default BusDriving;\r\n","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\icon.js",[],"C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\DataHandling.js",["114","115"],"import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class DataHandling {\r\n  constructor() {\r\n  }\r\n  \r\n\r\n  getBusStops (data) {\r\n    const haltestellen =  {};\r\n    data?.forEach((item) => {\r\n      haltestellen[item.properties.nr] = item.properties.lbez;\r\n    })\r\n    return haltestellen;\r\n  }\r\n  \r\n  getBusLines(data, filter) {\r\n    const linesArray = [];\r\n    const lines = [];\r\n    let bus;\r\n    data?.forEach((item) => {\r\n      if (!lines.includes(item.properties.linienid)){\r\n        if(!filter.includes(item.properties.linienid)){\r\n          bus = {\r\n            linienid: item.properties.linienid,\r\n            id: uuidv4(),\r\n          }  \r\n        } else {\r\n          bus = {\r\n            linienid: item.properties.linienid,\r\n            id: uuidv4(),\r\n            checked: true,\r\n          }  \r\n        }\r\n        linesArray.push(bus);\r\n        lines.push(item.properties.linienid);\r\n      }\r\n    });\r\n    linesArray.sort((a, b) => {\r\n      return a.linienid - b.linienid\r\n    });\r\n\r\n    return linesArray;\r\n  }\r\n\r\n  getBusInformation(data, filter, haltestellen) {\r\n    const busArray = [];\r\n    let bus;\r\n    if (filter.length > 0) {\r\n      data?.forEach((item) => {\r\n        filter.forEach(filterItem => {\r\n          if (filterItem === item.properties.linienid) {\r\n            bus = item.properties;\r\n            bus['longitude'] = item.geometry.coordinates[0];\r\n            bus['latitude'] = item.geometry.coordinates[1];\r\n            bus['id'] = uuidv4();\r\n            bus['Starthaltestelle'] = haltestellen[item.properties.starthst];\r\n            bus['Zielhaltestelle'] = haltestellen[item.properties.zielhst];\r\n            busArray.push(bus);\r\n          }\r\n        })\r\n      });\r\n      busArray.sort((a, b) => {\r\n        return a.linienid - b.linienid\r\n      });\r\n\r\n\r\n\r\n      return busArray;\r\n    }\r\n    data?.map((item) => {\r\n      bus = item.properties;\r\n      bus['longitude'] = item.geometry.coordinates[0];\r\n      bus['latitude'] = item.geometry.coordinates[1];\r\n      bus['id'] = uuidv4();\r\n      bus['Starthaltestelle'] = haltestellen[item.properties.starthst];\r\n      bus['Zielhaltestelle'] = haltestellen[item.properties.zielhst];\r\n      bus['Aktuellhaltestelle'] = haltestellen[item.properties.akthst];\r\n\r\n      busArray.push(bus);\r\n    });\r\n    busArray.sort((a, b) => {\r\n      return a.linienid - b.linienid\r\n    });\r\n\r\n    return busArray;\r\n  }\r\n\r\n}\r\n\r\n","C:\\Users\\Irene\\Desktop\\Uni_Regensburg_Dokumente\\Projekte\\MuensterBusfahrplan\\Busfahrt_Projekt\\src\\components\\BusDialogV2.jsx",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":28,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"124","line":5,"column":3,"nodeType":"122","messageId":"123","endLine":5,"endColumn":9},{"ruleId":"120","severity":1,"message":"125","line":6,"column":3,"nodeType":"122","messageId":"123","endLine":6,"endColumn":8},{"ruleId":"120","severity":1,"message":"126","line":8,"column":3,"nodeType":"122","messageId":"123","endLine":8,"endColumn":14},{"ruleId":"120","severity":1,"message":"127","line":10,"column":8,"nodeType":"122","messageId":"123","endLine":10,"endColumn":15},{"ruleId":"120","severity":1,"message":"128","line":13,"column":8,"nodeType":"122","messageId":"123","endLine":13,"endColumn":9},{"ruleId":"120","severity":1,"message":"129","line":13,"column":13,"nodeType":"122","messageId":"123","endLine":13,"endColumn":16},{"ruleId":"120","severity":1,"message":"130","line":14,"column":10,"nodeType":"122","messageId":"123","endLine":14,"endColumn":20},{"ruleId":"120","severity":1,"message":"131","line":14,"column":22,"nodeType":"122","messageId":"123","endLine":14,"endColumn":30},{"ruleId":"120","severity":1,"message":"132","line":16,"column":7,"nodeType":"122","messageId":"123","endLine":16,"endColumn":15},{"ruleId":"120","severity":1,"message":"133","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":22},{"ruleId":"120","severity":1,"message":"134","line":2,"column":24,"nodeType":"122","messageId":"123","endLine":2,"endColumn":33},{"ruleId":"120","severity":1,"message":"135","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":20},{"ruleId":"120","severity":1,"message":"136","line":7,"column":5,"nodeType":"122","messageId":"123","endLine":7,"endColumn":6},{"ruleId":"120","severity":1,"message":"133","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":22},{"ruleId":"120","severity":1,"message":"134","line":2,"column":24,"nodeType":"122","messageId":"123","endLine":2,"endColumn":33},{"ruleId":"120","severity":1,"message":"128","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":9},{"ruleId":"120","severity":1,"message":"137","line":4,"column":10,"nodeType":"122","messageId":"123","endLine":4,"endColumn":17},{"ruleId":"116","replacedBy":"138"},{"ruleId":"118","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":11,"column":25,"nodeType":"142","messageId":"143","endLine":11,"endColumn":41,"fix":"144"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":28,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"124","line":5,"column":3,"nodeType":"122","messageId":"123","endLine":5,"endColumn":9},{"ruleId":"120","severity":1,"message":"125","line":6,"column":3,"nodeType":"122","messageId":"123","endLine":6,"endColumn":8},{"ruleId":"120","severity":1,"message":"126","line":8,"column":3,"nodeType":"122","messageId":"123","endLine":8,"endColumn":14},{"ruleId":"120","severity":1,"message":"128","line":12,"column":8,"nodeType":"122","messageId":"123","endLine":12,"endColumn":9},{"ruleId":"120","severity":1,"message":"129","line":12,"column":13,"nodeType":"122","messageId":"123","endLine":12,"endColumn":16},{"ruleId":"120","severity":1,"message":"130","line":13,"column":10,"nodeType":"122","messageId":"123","endLine":13,"endColumn":20},{"ruleId":"120","severity":1,"message":"131","line":13,"column":22,"nodeType":"122","messageId":"123","endLine":13,"endColumn":30},{"ruleId":"120","severity":1,"message":"132","line":15,"column":7,"nodeType":"122","messageId":"123","endLine":15,"endColumn":15},{"ruleId":"120","severity":1,"message":"133","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":22},{"ruleId":"120","severity":1,"message":"134","line":2,"column":24,"nodeType":"122","messageId":"123","endLine":2,"endColumn":33},{"ruleId":"120","severity":1,"message":"128","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":9},{"ruleId":"120","severity":1,"message":"135","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":20},{"ruleId":"145","severity":1,"message":"146","line":15,"column":44,"nodeType":"147","messageId":"148","endLine":15,"endColumn":46},{"ruleId":"149","severity":1,"message":"150","line":4,"column":3,"nodeType":"151","messageId":"152","endLine":5,"endColumn":4},{"ruleId":"145","severity":1,"message":"153","line":70,"column":22,"nodeType":"147","messageId":"154","endLine":70,"endColumn":24},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Marker' is defined but never used.","'Popup' is defined but never used.","'withLeaflet' is defined but never used.","'Control' is defined but never used.","'L' is defined but never used.","'map' is defined but never used.","'iconPerson' is defined but never used.","'testIcon' is defined but never used.","'position' is assigned a value but never used.","'MapContainer' is defined but never used.","'TileLayer' is defined but never used.","'ExtraMarkers' is defined but never used.","'i' is assigned a value but never used.","'busIcon' is defined but never used.",["155"],["156"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"157","text":"158"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation",[329,329],"()"]