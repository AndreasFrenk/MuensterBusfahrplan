[{"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\index.js":"1","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\reportWebVitals.js":"2","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\App.js":"3","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\DataHandling.js":"4","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\map.jsx":"5","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusDialogV2.jsx":"6","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusDriving.jsx":"7","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusStops.jsx":"8","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\icon.js":"9"},{"size":517,"mtime":1610536050471,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":3686,"mtime":1610555839472,"results":"13","hashOfConfig":"11"},{"size":2383,"mtime":1610555839782,"results":"14","hashOfConfig":"11"},{"size":1687,"mtime":1610555839788,"results":"15","hashOfConfig":"11"},{"size":2093,"mtime":1610555839764,"results":"16","hashOfConfig":"11"},{"size":2087,"mtime":1610555839770,"results":"17","hashOfConfig":"11"},{"size":832,"mtime":1610555839776,"results":"18","hashOfConfig":"11"},{"size":980,"mtime":1610555839794,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1eltra3",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\index.js",[],["43","44"],"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\reportWebVitals.js",[],"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\App.js",["45"],"import React, { Component } from \"react\";\r\nimport BusMap from \"./components/map\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DataHandling from './components/DataHandling';\r\n\r\n\r\nclass Apps extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.interval = 0;\r\n    this.datahandling = new DataHandling;\r\n    this.state = {\r\n      items: [],\r\n      isLoaded: false,\r\n      currentCount: 0,\r\n      filteredBusses: [],\r\n      AllBusses: [],\r\n      filter: [],\r\n      AllLines: [],\r\n      itemsBus: [],\r\n      itmesStop: [],\r\n      isLoadedBus: false,\r\n      isLoadedStops: false,\r\n      zoom: 16,\r\n      currensposition: [],\r\n      positionLoaded: false,\r\n    };\r\n    this.filterBusses = this.filterBusses.bind(this);\r\n    this.getData = this.getData.bind(this);\r\n\r\n  }\r\n\r\n  timer() {\r\n    this.setState({\r\n      currentCount: this.state.currentCount + 1\r\n    })\r\n    if (this.state.currentCount >= 10) {\r\n      this.getData();\r\n      this.setState({\r\n        currentCount: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  filterBusses(id) {\r\n    const newStateArray = this.state.filter.slice();\r\n    const index = newStateArray.indexOf(id);\r\n\r\n    if (index > -1) {\r\n      newStateArray.splice(index, 1);\r\n    }\r\n    else {\r\n      newStateArray.push(id);\r\n    }\r\n\r\n    this.setState({\r\n      filter: newStateArray,\r\n    },\r\n      this.updateFilteredBusses);\r\n  }\r\n\r\n  updateFilteredBusses() {\r\n\r\n    this.setState({\r\n      filteredBusses: this.datahandling.getBusInformation(this.state.items, this.state.filter, this.state.busStops),\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getHaltestellen();\r\n    setInterval(this.timer.bind(this), 1000);\r\n  }\r\n\r\n  getHaltestellen() {\r\n    fetch(\"https://rest.busradar.conterra.de/prod/haltestellen\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          busStops: this.datahandling.getBusStops(json.features),\r\n          itemsStop: json.features,\r\n        });\r\n      }).then(() => this.getData())\r\n      ;\r\n\r\n      if (\"geolocation\" in navigator) {\r\n        navigator.geolocation.getCurrentPosition((success) =>\r\n          this.setState({\r\n            currensposition: [success.coords.latitude, success.coords.longitude],\r\n            positionLoaded: true,\r\n          })\r\n        );\r\n\r\n      } else {\r\n        console.log(\"Not Available\");\r\n      }\r\n  }\r\n\r\n\r\n  getData() {\r\n    fetch(\"https://rest.busradar.conterra.de/prod/fahrzeuge\")\r\n      .then((res) => res.json())\r\n      .then((json) => {\r\n        this.setState({\r\n          items: json.features,\r\n          AllLines: this.datahandling.getBusLines(json.features, this.state.filter),\r\n          AllBusses: this.datahandling.getBusInformation(json.features, [],  this.state.busStops),\r\n          filteredBusses: this.datahandling.getBusInformation(json.features, this.state.filter, this.state.busStops),\r\n          isLoaded: true,\r\n          itemsBus: json.features,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoaded) {\r\n    return (\r\n      <div>\r\n        <BusMap\r\n          itemsStop={this.state.itemsStop}\r\n          itemsBus={this.state.itemsBus}\r\n          zoom={this.state.zoom}\r\n          currentPosition={this.state.currensposition}\r\n          positionLoaded={this.state.positionLoaded}\r\n          busStops={this.state.busStops}\r\n          AllLines={this.state.AllLines}\r\n          filter={this.state.filter}\r\n          filterBusses={this.filterBusses}\r\n          AllBusses={this.state.AllBusses}\r\n          items={this.state.items}\r\n          filteredBusses={this.state.filteredBusses} />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n  else {\r\n    return <p>Is Loading...</p>\r\n  }\r\n  }\r\n}\r\n\r\nexport default Apps;\r\n","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\DataHandling.js",["46","47"],"import { v4 as uuidv4 } from 'uuid';\r\n\r\nexport default class DataHandling {\r\n  constructor() {\r\n  }\r\n  \r\n\r\n  getBusStops (data) {\r\n    const haltestellen =  {};\r\n    data?.forEach((item) => {\r\n      haltestellen[item.properties.nr] = item.properties.lbez;\r\n    })\r\n    return haltestellen;\r\n  }\r\n  \r\n  getBusLines(data, filter) {\r\n    const linesArray = [];\r\n    const lines = [];\r\n    let bus;\r\n    data?.forEach((item) => {\r\n      if (!lines.includes(item.properties.linienid)){\r\n        if(!filter.includes(item.properties.linienid)){\r\n          bus = {\r\n            linienid: item.properties.linienid,\r\n            id: uuidv4(),\r\n          }  \r\n        } else {\r\n          bus = {\r\n            linienid: item.properties.linienid,\r\n            id: uuidv4(),\r\n            checked: true,\r\n          }  \r\n        }\r\n        linesArray.push(bus);\r\n        lines.push(item.properties.linienid);\r\n      }\r\n    });\r\n    linesArray.sort((a, b) => {\r\n      return a.linienid - b.linienid\r\n    });\r\n\r\n    return linesArray;\r\n  }\r\n\r\n  getBusInformation(data, filter, haltestellen) {\r\n    const busArray = [];\r\n    let bus;\r\n    if (filter.length > 0) {\r\n      data?.forEach((item) => {\r\n        filter.forEach(filterItem => {\r\n          if (filterItem === item.properties.linienid) {\r\n            bus = item.properties;\r\n            bus['longitude'] = item.geometry.coordinates[0];\r\n            bus['latitude'] = item.geometry.coordinates[1];\r\n            bus['id'] = uuidv4();\r\n            bus['Starthaltestelle'] = haltestellen[item.properties.starthst];\r\n            bus['Zielhaltestelle'] = haltestellen[item.properties.zielhst];\r\n            busArray.push(bus);\r\n          }\r\n        })\r\n      });\r\n      busArray.sort((a, b) => {\r\n        return a.linienid - b.linienid\r\n      });\r\n\r\n\r\n\r\n      return busArray;\r\n    }\r\n    data?.map((item) => {\r\n      bus = item.properties;\r\n      bus['longitude'] = item.geometry.coordinates[0];\r\n      bus['latitude'] = item.geometry.coordinates[1];\r\n      bus['id'] = uuidv4();\r\n      bus['Starthaltestelle'] = haltestellen[item.properties.starthst];\r\n      bus['Zielhaltestelle'] = haltestellen[item.properties.zielhst];\r\n      bus['Aktuellhaltestelle'] = haltestellen[item.properties.akthst];\r\n\r\n      busArray.push(bus);\r\n    });\r\n    busArray.sort((a, b) => {\r\n      return a.linienid - b.linienid\r\n    });\r\n\r\n    return busArray;\r\n  }\r\n\r\n}\r\n\r\n","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\map.jsx",["48","49"],"import React, { Component } from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport BusDriving from \"./BusDriving\";\r\nimport BusDialogV2 from \"./BusDialogV2\";\r\n\r\nimport BusStops from \"./BusStops\";\r\n\r\nclass BusMap extends Component {\r\n  render() {\r\n    const center = () => {\r\n      if (this.props.positionLoaded) {\r\n          return this.props.currentPosition;\r\n      } else {\r\n        return [51.961563, 7.628202];\r\n      }\r\n    };\r\n      return (\r\n        <div>\r\n          <MapContainer\r\n            // center={center()}\r\n            center={[51.961563, 7.628202]}\r\n            // zoom={this.props.zoom}\r\n            zoom={16}\r\n            scrollWheelZoom={true}\r\n          >\r\n            <TileLayer\r\n              attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n            <BusDriving\r\n              itemsBus={this.props.itemsBus}\r\n              filter={this.props.filter}\r\n            />\r\n            {/* <BusStops\r\n              itemsStop={this.props.itemsStop}\r\n              isLoadedStops={this.props.isLoadedStops}\r\n            /> */}\r\n          </MapContainer>\r\n          <BusDialogV2\r\n            busStops={this.props.busStops}\r\n            AllLines={this.props.AllLines}\r\n            filter={this.props.filter}\r\n            filterBusses={this.props.filterBusses}\r\n            AllBusses={this.props.AllBusses}\r\n            items={this.props.items}\r\n            isLoaded={this.props.isLoaded}\r\n            filteredBusses={this.props.filteredBusses}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default BusMap;\r\n","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusDialogV2.jsx",[],"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusDriving.jsx",["50","51"],"import React, { Component } from \"react\";\r\nimport { Marker, Popup } from \"react-leaflet\";\r\nimport { busIconRed, busIconGreen, busIconYellow } from \"../icon\";\r\nimport L from \"leaflet\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ExtraMarkers from \"leaflet-extra-markers\";\r\n\r\nclass BusDriving extends Component {\r\n  render() {\r\n    return this.loadComponent();\r\n  }\r\n\r\n  loadComponent() {\r\n    return this.props.itemsBus.map(((item) => {\r\n      if (\r\n        this.props.filter.length > 0\r\n          ? this.props.filter.includes(item.properties.linienid)\r\n          : true\r\n      ) {\r\n        return (\r\n          <div key={uuidv4()}>\r\n            <Marker\r\n              icon={\r\n                item.properties.delay > 20\r\n                  ? busIconRed\r\n                  : item.properties.delay >= 10\r\n                  ? busIconYellow\r\n                  : busIconGreen\r\n              }\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n              opacity=\"1\"\r\n              size=\"30px\"\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n            <Marker\r\n              icon={\r\n                new L.ExtraMarkers.icon({\r\n                  shape: \"\",\r\n                  innerHTML: item.properties.linienid.toString(),\r\n                  color: \"red\",\r\n                  iconColor: \"red\",\r\n                  iconSize: [24, 24],\r\n                  iconAnchor: [2, 0],\r\n                })\r\n              }\r\n              position={[\r\n                item.geometry.coordinates[1],\r\n                item.geometry.coordinates[0],\r\n              ]}\r\n            >\r\n              <Popup>\r\n                Linie: {item.properties.linienid} <br /> Richtung:{\" \"}\r\n                {item.properties.richtungstext}\r\n              </Popup>\r\n            </Marker>\r\n          </div>\r\n        );\r\n      }\r\n    }));\r\n  }\r\n}\r\nexport default BusDriving;\r\n","E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\components\\BusStops.jsx",[],"E:\\Programmieren\\React\\Busfahrt_Projekt_Joni\\src\\icon.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":11,"column":25,"nodeType":"58","messageId":"59","endLine":11,"endColumn":41,"fix":"60"},{"ruleId":"61","severity":1,"message":"62","line":4,"column":3,"nodeType":"63","messageId":"64","endLine":5,"endColumn":4},{"ruleId":"65","severity":1,"message":"66","line":70,"column":22,"nodeType":"67","messageId":"68","endLine":70,"endColumn":24},{"ruleId":"69","severity":1,"message":"70","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":16},{"ruleId":"69","severity":1,"message":"73","line":10,"column":11,"nodeType":"71","messageId":"72","endLine":10,"endColumn":17},{"ruleId":"69","severity":1,"message":"74","line":6,"column":8,"nodeType":"71","messageId":"72","endLine":6,"endColumn":20},{"ruleId":"65","severity":1,"message":"75","line":14,"column":44,"nodeType":"67","messageId":"76","endLine":14,"endColumn":46},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"79","text":"80"},"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'BusStops' is defined but never used.","Identifier","unusedVar","'center' is assigned a value but never used.","'ExtraMarkers' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","no-global-assign","no-unsafe-negation",[329,329],"()"]